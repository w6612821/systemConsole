{"ast":null,"code":"import \"antd/es/modal/style/css\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/card/style/css\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"D:\\\\systemConsole\\\\src\\\\components\\\\list\\\\index.js\";\nimport React, { Component } from 'react';\nimport { getList, del } from '../../api/request';\nexport default class List extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageContent = (page, pageSize) => {\n      // 参数是这个组件帮我传的。不用自己传\n      this.getData(page, pageSize);\n    };\n\n    this.goAdd = () => {\n      this.props.history.push('/home/add');\n    };\n\n    this.remove = id => {\n      this.setState({\n        id,\n        visible: true\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleOk = () => {\n      _message.success('删除成功');\n\n      this.setState({\n        loading: true\n      }, () => {\n        del(this.state.id).then(res => {\n          if (res.status === 0) {\n            this.getData(1, this.state.count);\n          }\n        }).finally(() => {\n          setTimeout(() => {\n            this.setState({\n              visible: false,\n              loading: false\n            });\n          }, 1000);\n        });\n      });\n    };\n\n    this.state = {\n      count: 0,\n      //总的记录数\n      pageSize: 7,\n      dataSource: [],\n      //数据源\n      id: -1,\n      visible: false,\n      loading: false,\n      btn: true,\n      columns: [//列的格式\n      {\n        title: '姓名',\n        dataIndex: 'name',\n        key: 'name'\n      }, {\n        title: '年龄',\n        dataIndex: 'age',\n        key: 'age'\n      }, {\n        title: '操作',\n        dataIndex: 'operate',\n        key: 'operate',\n        render: (text, record) => {\n          return React.createElement(\"button\", {\n            onClick: this.remove.bind(this, record.key),\n            style: {\n              \"display\": this.state.btn ? \"block\" : \"none\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, \"\\u5220\\u9664\");\n        }\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.getData(1, this.state.pageSize); //获取第一页的数据\n\n    if (sessionStorage.getItem(\"username\") !== \"admin\") {\n      this.setState({\n        btn: false\n      });\n    }\n  }\n\n  getData(page, pageSize) {\n    //因为分页时要多次使用\n    getList(page, pageSize).then(res => {\n      var list = res.list.map(item => {\n        return {\n          key: item._id,\n          name: item.name,\n          age: item.age\n        };\n      });\n      this.setState({\n        dataSource: list,\n        count: res.count\n      });\n    });\n  }\n\n  render() {\n    let {\n      dataSource,\n      columns,\n      count,\n      pageSize\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(_Card, {\n      bordered: false,\n      title: \"\\u5B66\\u751F\\u5217\\u8868\",\n      extra: React.createElement(\"button\", {\n        onClick: this.goAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"\\u6DFB\\u52A0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      dataSource: dataSource,\n      columns: columns,\n      pagination: {\n        total: count,\n        pageSize,\n        onChange: this.getPageContent\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(_Modal, {\n      title: \"Basic Modal\",\n      visible: this.state.visible,\n      onOk: this.handleOk,\n      onCancel: this.handleCancel,\n      maskClosable: false,\n      confirmLoading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"\\u786E\\u8BA4\\u5220\\u9664\\uFF1F\")));\n  }\n\n}","map":{"version":3,"sources":["D:/systemConsole/src/components/list/index.js"],"names":["React","Component","getList","del","List","constructor","props","getPageContent","page","pageSize","getData","goAdd","history","push","remove","id","setState","visible","handleCancel","handleOk","success","loading","state","then","res","status","count","finally","setTimeout","dataSource","btn","columns","title","dataIndex","key","render","text","record","bind","componentDidMount","sessionStorage","getItem","list","map","item","_id","name","age","total","onChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Card, Table, Modal, message } from 'antd';\r\nimport { getList, del } from '../../api/request'\r\n\r\n\r\nexport default class List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: 0, //总的记录数\r\n            pageSize: 7,\r\n            dataSource: [],  //数据源\r\n            id: -1,\r\n            visible: false,\r\n            loading: false,\r\n            btn: true,\r\n            columns: [   //列的格式\r\n                {\r\n                    title: '姓名',\r\n                    dataIndex: 'name',\r\n                    key: 'name',\r\n                },\r\n                {\r\n                    title: '年龄',\r\n                    dataIndex: 'age',\r\n                    key: 'age',\r\n                },\r\n                {\r\n                    title: '操作',\r\n                    dataIndex: 'operate',\r\n                    key: 'operate',\r\n                    render: (text, record) => {\r\n                        return <button onClick={this.remove.bind(this, record.key)}\r\n                            style={{ \"display\": this.state.btn ? \"block\" : \"none\" }}>删除</button>\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getData(1, this.state.pageSize)  //获取第一页的数据\r\n        if (sessionStorage.getItem(\"username\") !== \"admin\") {\r\n            this.setState({\r\n                btn: false\r\n            })\r\n        }\r\n    }\r\n    getData(page, pageSize) {   //因为分页时要多次使用\r\n        getList(page, pageSize).then((res) => {\r\n            var list = res.list.map((item) => {\r\n                return {\r\n                    key: item._id,\r\n                    name: item.name,\r\n                    age: item.age,\r\n                }\r\n            })\r\n            this.setState({\r\n                dataSource: list,\r\n                count: res.count\r\n            })\r\n        })\r\n    }\r\n    getPageContent = (page, pageSize) => {  // 参数是这个组件帮我传的。不用自己传\r\n        this.getData(page, pageSize);\r\n    }\r\n    goAdd = () => {\r\n        this.props.history.push('/home/add')\r\n    }\r\n    remove = (id) => {\r\n        this.setState({\r\n            id,\r\n            visible: true\r\n        })\r\n    }\r\n    handleCancel = () => {\r\n        this.setState({\r\n            visible: false\r\n        })\r\n    }\r\n    handleOk = () => {\r\n        message.success('删除成功');\r\n        this.setState({\r\n            loading: true\r\n        }, () => {\r\n            del(this.state.id).then((res) => {\r\n                if (res.status === 0) {\r\n                    this.getData(1, this.state.count)\r\n                }\r\n            }).finally(() => {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        visible: false,\r\n                        loading: false\r\n                    })\r\n                }, 1000)\r\n\r\n            })\r\n        })\r\n\r\n    }\r\n    render() {\r\n\r\n        let { dataSource, columns, count, pageSize } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Card bordered={false} title=\"学生列表\" extra={<button onClick={this.goAdd}>添加</button>}>\r\n                    <Table dataSource={dataSource} columns={columns}\r\n                        pagination={{ total: count, pageSize, onChange: this.getPageContent }} />\r\n                </Card>\r\n                <Modal\r\n                    title=\"Basic Modal\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                    maskClosable={false}\r\n                    confirmLoading={this.state.loading}\r\n                >\r\n                    <p>确认删除？</p>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}